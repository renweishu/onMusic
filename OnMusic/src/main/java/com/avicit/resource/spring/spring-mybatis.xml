<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"

	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!--【数据源1】 数据源1 连接池 musicddl -->
	<!-- Proxool是和DBCP以及C3P0一起，最为常见的三种JDBC连接池技术。目前还有阿里巴巴的druid -->
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="alias" value="${jdbc.alias}" />
		<property name="driver" value="${jdbc.driver}" />
		<property name="driverUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maximumConnectionCount" value="${jdbc.maximum.connection.count}" />
		<property name="minimumConnectionCount" value="${jdbc.minimum.connection.count}" />
		<property name="statistics" value="${jdbc.statistics}" />
		<property name="simultaneousBuildThrottle" value="${jdbc.simultaneous.build.throttle}" />
	</bean>

	<!-- 【数据源1】Spring 将会在应用启动时为你 创建 SqlSessionFactory 对象,然后将它以 SqlSessionFactory 
		为名来存储 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<!-- 【备注】方式1、单独加载mybatis-config.xml 使用里面的别名，mapper.xml配置 -->
		<!-- <property name="configLocation" value="classpath:com/avicit/resource/spring/mybatis-config.xml" 
			/> -->
		<!-- 【备注】方式2、不加载 mybatis-config.xml 使用typeAliasesPackage、mapperLocations加载 
			别名，mapper.xml配置 -->
		<!-- 加载此路径包下实体类 的别名 -->
		<property name="typeAliasesPackage" value="com.avicit.onlinemusic.entity" />
		<!-- mapperLocations 属性使用一个资源位置的 list -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />

	</bean>

	<!-- 【数据源1】使用一个 MapperScannerConfigurer , 它 将 会 查 找 类 路 径 下 的 映 射 器 并 自 
		动 将 它 们 创 建 成 MapperFactoryBean。 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.avicit.onlinemusic.dao" />
		<!-- 注 意 , 没 有 必 要 去 指 定 SqlSessionFactory 或 SqlSessionTemplate , -->
		<!-- 因 为 MapperScannerConfigurer 将会创建 MapperFactoryBean,之后自动装配 -->
		<!-- 但是,如果你使 用了一个 以上的 DataSource ,那 么自动 装配可 能会失效 -->
		<!-- 这种 情况下 ,你可 以使用 sqlSessionFactoryBeanName 或 sqlSessionTemplateBeanName 
			属性来设置正确的 bean 名 称来使用 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- *******************************************数据源1和2 分界线***************************************************** -->

	<!--【数据源2】 数据源2 连接池 musicddl1 -->
	<!-- Proxool是和DBCP以及C3P0一起，最为常见的三种JDBC连接池技术。目前还有阿里巴巴的druid -->
	<!-- 【注意:】配置双数据源时，如果用 proxool连接池，alias别名必须不同 -->
	<bean id="dataSource1" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="alias" value="${jdbc.second.alias}" />
		<property name="driver" value="${jdbc.second.driver}" />
		<property name="driverUrl" value="${jdbc.second.url}" />
		<property name="user" value="${jdbc.second.username}" />
		<property name="password" value="${jdbc.second.password}" />
		<property name="maximumConnectionCount" value="${jdbc.second.maximum.connection.count}" />
		<property name="minimumConnectionCount" value="${jdbc.second.minimum.connection.count}" />
		<property name="statistics" value="${jdbc.second.statistics}" />
		<property name="simultaneousBuildThrottle" value="${jdbc.second.simultaneous.build.throttle}" />
	</bean>

	<!-- 【数据源2】Spring 将会在应用启动时为你 创建 SqlSessionFactory 对象,然后将它以 SqlSessionFactory 
		为名来存储 -->
	<bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource1" />
		<property name="typeAliasesPackage" value="com.avicit.onlinemusic.entitytwo" />
		<property name="mapperLocations" value="classpath:pappertwo/*.xml" />
	</bean>

	<!-- 【数据源2】使用一个 MapperScannerConfigurer , 它 将 会 查 找 类 路 径 下 的 映 射 器 并 自 
		动 将 它 们 创 建 成 MapperFactoryBean。 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.avicit.onlinemusic.daotwo" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1" />
	</bean>

	<!--【备注:】 导入事务管理配置文件 -->
	<import resource="classpath:com/avicit/resource/spring/spring-aop.xml" />
</beans>
