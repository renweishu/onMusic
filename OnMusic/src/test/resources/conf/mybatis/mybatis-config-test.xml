<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration 
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>


	<!-- 这些属性都是可外部配置且可动态替换的，既可以在典型的 Java 属性文件中配置，亦可通过 properties 元素的子元素来传递 -->
	<properties resource="conf/jdbc/jdbc.properties">
		<!-- 也可通过 properties 元素的子元素来传递 -->
		<!-- <property name="username" value="dev_user" /> <property name="password" 
			value="F2Fa3!33TYyg" /> -->
	</properties>

	<!-- 一个配置完整的 settings 元素的示例 -->
	<settings>
		<setting name="cacheEnabled" value="true" />
		<setting name="lazyLoadingEnabled" value="true" />
		<setting name="multipleResultSetsEnabled" value="true" />
		<setting name="useColumnLabel" value="true" />
		<setting name="useGeneratedKeys" value="false" />
		<setting name="autoMappingBehavior" value="PARTIAL" />
		<setting name="defaultExecutorType" value="SIMPLE" />
		<setting name="defaultStatementTimeout" value="25" />
		<setting name="safeRowBoundsEnabled" value="false" />
		<setting name="mapUnderscoreToCamelCase" value="false" />
		<setting name="localCacheScope" value="SESSION" />
		<setting name="jdbcTypeForNull" value="OTHER" />
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />
	</settings>

	<!-- 类型别名是为 Java 类型设置一个短的名字 -->
	<typeAliases>
		<!-- 数据源1 -->
		<typeAlias alias="User" type="com.avicit.onlinemusic.entity.User" />
		<typeAlias alias="Comments" type="com.avicit.onlinemusic.entity.Comments" />
		<typeAlias alias="Music" type="com.avicit.onlinemusic.entity.Music" />
		<typeAlias alias="Admin" type="com.avicit.onlinemusic.entity.Admin" />
		<typeAlias alias="Link" type="com.avicit.onlinemusic.entity.Link" />
		<typeAlias alias="Message" type="com.avicit.onlinemusic.entity.Message" />
		<typeAlias alias="Tip" type="com.avicit.onlinemusic.entity.Tip" />

		<!-- 数据源2 -->
		<typeAlias alias="MusicBackup"
			type="com.avicit.onlinemusic.entitytwo.MusicBackup" />
	</typeAliases>


	<environments default="development">
		<!-- 默认的环境 ID（比如:default=”development”）。 每个 environment 元素定义的环境 ID（比如:id=”development”）。 
			事务管理器的配置（比如:type=”JDBC”）。 数据源的配置（比如:type=”POOLED”）。 -->
		<!-- 数据源1 -->
		<environment id="oneDataSource">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
		<!-- 数据源2 -->
		 <environment id="twoDataSource">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.second.driver}" />
				<property name="url" value="${jdbc.second.url}" />
				<property name="username" value="${jdbc.second.username}" />
				<property name="password" value="${jdbc.second.password}" />
			</dataSource>
		</environment>
	</environments>



	<!-- 映射器（mappers） -->
	<!-- Using classpath relative resources -->
	<mappers>
		<!-- 数据源1 -->
		<mapper resource="mapper/UserMusicCommentDemo.xml" />
		<mapper resource="mapper/UserServiceDaoMapper.xml" />
		<mapper resource="mapper/AdminServiceDaoMapper.xml" />
		<mapper resource="mapper/CommentsServiceDaoMapper.xml" />
		<mapper resource="mapper/LinkServiceDaoMapper.xml" />
		<mapper resource="mapper/MessageServiceDaoMapper.xml" />
		<mapper resource="mapper/MusicServiceDaoMapper.xml" />
		<mapper resource="mapper/TipServiceDaoMapper.xml" /> 
		<!-- 数据源2 -->
		<mapper resource="pappertwo/MusicBackupServiceDaoMapper.xml" />

	</mappers>
</configuration>